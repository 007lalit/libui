version: 'build #{build}'

environment:
  matrix:
    - linking: shared
      compiler: msvc2013
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    - linking: static
      compiler: msvc2013
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    - linking: shared
      compiler: msvc2015
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - linking: static
      compiler: msvc2015
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - linking: shared
      compiler: msvc2017
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - linking: static
      compiler: msvc2017
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - linking: static
      compiler: mingw
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

platform:
  - Win32
  - x64

before_build:
  - if %compiler%==msvc2013      ( set "CMAKE_GENERATOR=Visual Studio 12 2013" )
    else if %compiler%==msvc2015 ( set "CMAKE_GENERATOR=Visual Studio 14 2015" )
    else if %compiler%==msvc2017 ( set "CMAKE_GENERATOR=Visual Studio 15 2017" )
    else if %compiler%==mingw    ( set "CMAKE_GENERATOR=MinGW Makefiles" )
  - if %compiler%-%platform%==mingw-Win32    ( set "PATH=C:\msys64\mingw32\bin;%PATH%" )
    else if %compiler%-%platform%==mingw-x64 ( set "PATH=C:\msys64\mingw64\bin;%PATH%" )
    else if %platform%==x64 ( set "CMAKE_GENERATOR=%CMAKE_GENERATOR% Win64" )
  - if %linking%==static ( set CMAKE_FLAGS=-DBUILD_SHARED_LIBS=OFF )
  - ren "C:\Program Files\Git\usr\bin\sh.exe" _sh.exe

build_script:
  - md build && cd build
  - cmake -G "%CMAKE_GENERATOR%" %CMAKE_FLAGS% ..
  - if %compiler%==mingw ( mingw32-make tester examples )
    else ( msbuild libui.sln /t:Build /p:Configuration=Release /p:Platform=%platform% )

after_build:
  - if %platform%==x64 ( set "platform=amd64" ) else ( set "platform=386" )
  - echo set "target=%linking%-windows-%compiler%-%platform%"
  - cd %APPVEYOR_BUILD_FOLDER%
  - dir /S build\out
